global:
  scrape_interval: 1m
  scrape_timeout: 10s
  evaluation_interval: 1m
  external_labels:
	prometheus: cattle-prometheus/cluster-monitoring
	prometheus_from: kube-thangnv-test
	prometheus_replica: prometheus-cluster-monitoring-0
alerting:
  alert_relabel_configs:
  - separator: ;
	regex: prometheus_replica
	replacement: $1
	action: labeldrop
  alertmanagers:
  - static_configs:
	- targets:
	  - alertmanager-operated.cattle-prometheus:9093
	  labels:
		cluster_id: c-5sfwj
		cluster_name: kube-thangnv-test
		level: cluster
	scheme: http
	timeout: 10s
	api_version: v1
rule_files:
- /etc/prometheus/rules/prometheus-cluster-monitoring-rulefiles-0/*.yaml
scrape_configs:
- job_name: cattle-prometheus/exporter-fluentd-cluster-monitoring/0
  honor_labels: true
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - cattle-logging
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
	separator: ;
	regex: fluentd
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: metric
	replacement: $1
	action: keep
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Node;(.*)
	target_label: node
	replacement: ${1}
	action: replace
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Pod;(.*)
	target_label: pod
	replacement: ${1}
	action: replace
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: service
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.*)
	target_label: pod
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: job
	replacement: ${1}
	action: replace
  - separator: ;
	regex: (.*)
	target_label: endpoint
	replacement: metric
	action: replace
  - source_labels: [__meta_kubernetes_pod_host_ip]
	separator: ;
	regex: (.+)
	target_label: host_ip
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_node_name]
	separator: ;
	regex: (.+)
	target_label: node
	replacement: $1
	action: replace
- job_name: cattle-prometheus/exporter-kube-controller-manager-cluster-monitoring/0
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - cattle-prometheus
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_k8s_app]
	separator: ;
	regex: kube-controller-manager
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: metrics
	replacement: $1
	action: keep
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Node;(.*)
	target_label: node
	replacement: ${1}
	action: replace
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Pod;(.*)
	target_label: pod
	replacement: ${1}
	action: replace
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: service
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.*)
	target_label: pod
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: job
	replacement: ${1}
	action: replace
  - separator: ;
	regex: (.*)
	target_label: endpoint
	replacement: metrics
	action: replace
  - source_labels: [__meta_kubernetes_pod_host_ip]
	separator: ;
	regex: (.+)
	target_label: host_ip
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_node_name]
	separator: ;
	regex: (.+)
	target_label: node
	replacement: $1
	action: replace
- job_name: cattle-prometheus/exporter-kube-etcd-cluster-monitoring/0
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - cattle-prometheus
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
	ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
	cert_file: /etc/prometheus/secrets/exporter-etcd-cert/kube-etcd-192-168-11-47.pem
	key_file: /etc/prometheus/secrets/exporter-etcd-cert/kube-etcd-192-168-11-47-key.pem
	insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_k8s_app]
	separator: ;
	regex: etcd-server
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: metrics
	replacement: $1
	action: keep
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Node;(.*)
	target_label: node
	replacement: ${1}
	action: replace
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Pod;(.*)
	target_label: pod
	replacement: ${1}
	action: replace
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: service
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.*)
	target_label: pod
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: job
	replacement: ${1}
	action: replace
  - separator: ;
	regex: (.*)
	target_label: endpoint
	replacement: metrics
	action: replace
  - source_labels: [__meta_kubernetes_pod_host_ip]
	separator: ;
	regex: (.+)
	target_label: host_ip
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_node_name]
	separator: ;
	regex: (.+)
	target_label: node
	replacement: $1
	action: replace
- job_name: cattle-prometheus/exporter-kube-scheduler-cluster-monitoring/0
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - cattle-prometheus
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_component]
	separator: ;
	regex: kube-scheduler
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: http-metrics
	replacement: $1
	action: keep
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Node;(.*)
	target_label: node
	replacement: ${1}
	action: replace
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Pod;(.*)
	target_label: pod
	replacement: ${1}
	action: replace
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: service
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.*)
	target_label: pod
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: job
	replacement: ${1}
	action: replace
  - separator: ;
	regex: (.*)
	target_label: endpoint
	replacement: http-metrics
	action: replace
  - source_labels: [__meta_kubernetes_pod_host_ip]
	separator: ;
	regex: (.+)
	target_label: host_ip
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_node_name]
	separator: ;
	regex: (.+)
	target_label: node
	replacement: $1
	action: replace
- job_name: cattle-prometheus/exporter-kube-state-cluster-monitoring/0
  honor_labels: true
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - cattle-prometheus
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
	separator: ;
	regex: exporter-kube-state
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_chart]
	separator: ;
	regex: exporter-kube-state-0.0.1
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_monitoring_coreos_com]
	separator: ;
	regex: "true"
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_release]
	separator: ;
	regex: cluster-monitoring
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: http
	replacement: $1
	action: keep
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Node;(.*)
	target_label: node
	replacement: ${1}
	action: replace
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Pod;(.*)
	target_label: pod
	replacement: ${1}
	action: replace
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: service
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.*)
	target_label: pod
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: job
	replacement: ${1}
	action: replace
  - separator: ;
	regex: (.*)
	target_label: endpoint
	replacement: http
	action: replace
  - source_labels: [__meta_kubernetes_pod_host_ip]
	separator: ;
	regex: (.+)
	target_label: host_ip
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_node_name]
	separator: ;
	regex: (.+)
	target_label: node
	replacement: $1
	action: replace
- job_name: cattle-prometheus/exporter-kube-state-cluster-monitoring/1
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - cattle-prometheus
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
	separator: ;
	regex: exporter-kube-state
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_chart]
	separator: ;
	regex: exporter-kube-state-0.0.1
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_monitoring_coreos_com]
	separator: ;
	regex: "true"
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_release]
	separator: ;
	regex: cluster-monitoring
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: http-metrics
	replacement: $1
	action: keep
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Node;(.*)
	target_label: node
	replacement: ${1}
	action: replace
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Pod;(.*)
	target_label: pod
	replacement: ${1}
	action: replace
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: service
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.*)
	target_label: pod
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: job
	replacement: ${1}
	action: replace
  - separator: ;
	regex: (.*)
	target_label: endpoint
	replacement: http-metrics
	action: replace
  - source_labels: [__meta_kubernetes_pod_host_ip]
	separator: ;
	regex: (.+)
	target_label: host_ip
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_node_name]
	separator: ;
	regex: (.+)
	target_label: node
	replacement: $1
	action: replace
- job_name: cattle-prometheus/exporter-kubelets-cluster-monitoring/0
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - cattle-prometheus
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
	ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
	insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_k8s_app]
	separator: ;
	regex: kubelet
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: https-metrics
	replacement: $1
	action: keep
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Node;(.*)
	target_label: node
	replacement: ${1}
	action: replace
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Pod;(.*)
	target_label: pod
	replacement: ${1}
	action: replace
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: service
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.*)
	target_label: pod
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: job
	replacement: ${1}
	action: replace
  - separator: ;
	regex: (.*)
	target_label: endpoint
	replacement: https-metrics
	action: replace
  - source_labels: [__meta_kubernetes_pod_host_ip]
	separator: ;
	regex: (.+)
	target_label: host_ip
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_node_name]
	separator: ;
	regex: (.+)
	target_label: node
	replacement: $1
	action: replace
- job_name: cattle-prometheus/exporter-kubelets-cluster-monitoring/1
  honor_labels: true
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 10s
  metrics_path: /metrics/cadvisor
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - cattle-prometheus
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
	ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
	insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_k8s_app]
	separator: ;
	regex: kubelet
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: https-metrics
	replacement: $1
	action: keep
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Node;(.*)
	target_label: node
	replacement: ${1}
	action: replace
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Pod;(.*)
	target_label: pod
	replacement: ${1}
	action: replace
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: service
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.*)
	target_label: pod
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: job
	replacement: ${1}
	action: replace
  - separator: ;
	regex: (.*)
	target_label: endpoint
	replacement: https-metrics
	action: replace
  - source_labels: [__meta_kubernetes_pod_host_ip]
	separator: ;
	regex: (.+)
	target_label: host_ip
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_node_name]
	separator: ;
	regex: (.+)
	target_label: node
	replacement: $1
	action: replace
  metric_relabel_configs:
  - source_labels: [container]
	separator: ;
	regex: (.+)
	target_label: container_name
	replacement: $1
	action: replace
  - source_labels: [pod]
	separator: ;
	regex: (.+)
	target_label: pod_name
	replacement: $1
	action: replace
- job_name: cattle-prometheus/exporter-kubelets-cluster-monitoring/2
  honor_labels: true
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 10s
  metrics_path: /metrics/resource/v1alpha1
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - cattle-prometheus
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
	ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
	insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_k8s_app]
	separator: ;
	regex: kubelet
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: https-metrics
	replacement: $1
	action: keep
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Node;(.*)
	target_label: node
	replacement: ${1}
	action: replace
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Pod;(.*)
	target_label: pod
	replacement: ${1}
	action: replace
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: service
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.*)
	target_label: pod
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: job
	replacement: ${1}
	action: replace
  - separator: ;
	regex: (.*)
	target_label: endpoint
	replacement: https-metrics
	action: replace
  metric_relabel_configs:
  - source_labels: [container]
	separator: ;
	regex: (.+)
	target_label: container_name
	replacement: $1
	action: replace
  - source_labels: [pod]
	separator: ;
	regex: (.+)
	target_label: pod_name
	replacement: $1
	action: replace
- job_name: cattle-prometheus/exporter-kubernetes-cluster-monitoring/0
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - default
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
	ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
	insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_component]
	separator: ;
	regex: apiserver
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_provider]
	separator: ;
	regex: kubernetes
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: https
	replacement: $1
	action: keep
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Node;(.*)
	target_label: node
	replacement: ${1}
	action: replace
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Pod;(.*)
	target_label: pod
	replacement: ${1}
	action: replace
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: service
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.*)
	target_label: pod
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: job
	replacement: ${1}
	action: replace
  - separator: ;
	regex: (.*)
	target_label: endpoint
	replacement: https
	action: replace
  - source_labels: [__meta_kubernetes_pod_host_ip]
	separator: ;
	regex: (.+)
	target_label: host_ip
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_node_name]
	separator: ;
	regex: (.+)
	target_label: node
	replacement: $1
	action: replace
- job_name: cattle-prometheus/exporter-node-cluster-monitoring/0
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - cattle-prometheus
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
	separator: ;
	regex: exporter-node
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_chart]
	separator: ;
	regex: exporter-node-0.0.1
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_monitoring_coreos_com]
	separator: ;
	regex: "true"
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_release]
	separator: ;
	regex: cluster-monitoring
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: metrics
	replacement: $1
	action: keep
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Node;(.*)
	target_label: node
	replacement: ${1}
	action: replace
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Pod;(.*)
	target_label: pod
	replacement: ${1}
	action: replace
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: service
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.*)
	target_label: pod
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: job
	replacement: ${1}
	action: replace
  - separator: ;
	regex: (.*)
	target_label: endpoint
	replacement: metrics
	action: replace
  - source_labels: [__meta_kubernetes_pod_host_ip]
	separator: ;
	regex: (.+)
	target_label: host_ip
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_node_name]
	separator: ;
	regex: (.+)
	target_label: node
	replacement: $1
	action: replace
- job_name: cattle-prometheus/grafana-cluster-monitoring/0
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - cattle-prometheus
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
	separator: ;
	regex: grafana
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_chart]
	separator: ;
	regex: grafana-0.0.1
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_monitoring_coreos_com]
	separator: ;
	regex: "true"
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_release]
	separator: ;
	regex: cluster-monitoring
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: metrics
	replacement: $1
	action: keep
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Node;(.*)
	target_label: node
	replacement: ${1}
	action: replace
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Pod;(.*)
	target_label: pod
	replacement: ${1}
	action: replace
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: service
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.*)
	target_label: pod
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: job
	replacement: ${1}
	action: replace
  - separator: ;
	regex: (.*)
	target_label: endpoint
	replacement: metrics
	action: replace
  - source_labels: [__meta_kubernetes_pod_host_ip]
	separator: ;
	regex: (.+)
	target_label: host_ip
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_node_name]
	separator: ;
	regex: (.+)
	target_label: node
	replacement: $1
	action: replace
- job_name: cattle-prometheus/prometheus-cluster-monitoring/0
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - cattle-prometheus
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
	separator: ;
	regex: prometheus
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_chart]
	separator: ;
	regex: prometheus-0.0.1
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_monitoring_coreos_com]
	separator: ;
	regex: "true"
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_release]
	separator: ;
	regex: cluster-monitoring
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: metrics
	replacement: $1
	action: keep
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Node;(.*)
	target_label: node
	replacement: ${1}
	action: replace
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Pod;(.*)
	target_label: pod
	replacement: ${1}
	action: replace
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: service
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.*)
	target_label: pod
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: job
	replacement: ${1}
	action: replace
  - separator: ;
	regex: (.*)
	target_label: endpoint
	replacement: metrics
	action: replace
  - source_labels: [__meta_kubernetes_pod_host_ip]
	separator: ;
	regex: (.+)
	target_label: host_ip
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_node_name]
	separator: ;
	regex: (.+)
	target_label: node
	replacement: $1
	action: replace
- job_name: cattle-prometheus/prometheus-cluster-monitoring/1
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 10s
  metrics_path: /_/metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - cattle-prometheus
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
	separator: ;
	regex: prometheus
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_chart]
	separator: ;
	regex: prometheus-0.0.1
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_monitoring_coreos_com]
	separator: ;
	regex: "true"
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_release]
	separator: ;
	regex: cluster-monitoring
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: metrics
	replacement: $1
	action: keep
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Node;(.*)
	target_label: node
	replacement: ${1}
	action: replace
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Pod;(.*)
	target_label: pod
	replacement: ${1}
	action: replace
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: service
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.*)
	target_label: pod
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: job
	replacement: ${1}
	action: replace
  - separator: ;
	regex: (.*)
	target_label: endpoint
	replacement: metrics
	action: replace
  - source_labels: [__meta_kubernetes_pod_host_ip]
	separator: ;
	regex: (.+)
	target_label: host_ip
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_node_name]
	separator: ;
	regex: (.+)
	target_label: node
	replacement: $1
	action: replace
  metric_relabel_configs:
  - source_labels: [job]
	separator: ;
	regex: (.+)
	target_label: job
	replacement: expose-prometheus-auth-metrics
	action: replace
- job_name: cattle-prometheus/prometheus-operator-monitoring-operator/0
  honor_labels: true
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - cattle-prometheus
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
	separator: ;
	regex: prometheus-operator
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_chart]
	separator: ;
	regex: prometheus-operator-0.0.2
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_monitoring_coreos_com]
	separator: ;
	regex: "true"
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_service_label_release]
	separator: ;
	regex: monitoring-operator
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: metrics
	replacement: $1
	action: keep
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Node;(.*)
	target_label: node
	replacement: ${1}
	action: replace
  - source_labels: [meta_kubernetes_endpoint_address_target_kind, meta_kubernetes_endpoint_address_target_name]
	separator: ;
	regex: Pod;(.*)
	target_label: pod
	replacement: ${1}
	action: replace
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: service
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.*)
	target_label: pod
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_service_name]
	separator: ;
	regex: (.*)
	target_label: job
	replacement: ${1}
	action: replace
  - separator: ;
	regex: (.*)
	target_label: endpoint
	replacement: metrics
	action: replace
  - source_labels: [__meta_kubernetes_pod_host_ip]
	separator: ;
	regex: (.+)
	target_label: host_ip
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_node_name]
	separator: ;
	regex: (.+)
	target_label: node
	replacement: $1
	action: replace
- job_name: istio/envoy-stats
  honor_timestamps: true
  scrape_interval: 15s
  scrape_timeout: 10s
  metrics_path: /stats/prometheus
  scheme: http
  kubernetes_sd_configs:
  - role: pod
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_container_port_name]
	separator: ;
	regex: .*-envoy-prom
	replacement: $1
	action: keep
  - source_labels: [address, __meta_kubernetes_pod_annotation_prometheus_io_port]
	separator: ;
	regex: ([^:]+)(?::\d+)?;(\d+)
	target_label: address
	replacement: $1:15090
	action: replace
  - separator: ;
	regex: __meta_kubernetes_pod_label_(.+)
	replacement: $1
	action: labelmap
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.*)
	target_label: pod_name
	replacement: $1
	action: replace
- job_name: istio/istio-mesh
  honor_timestamps: true
  scrape_interval: 15s
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - istio-system
  relabel_configs:
  - source_labels: [meta_kubernetes_service_name, meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: istio-telemetry;prometheus
	replacement: $1
	action: keep
  metric_relabel_configs:
  - source_labels: [source_workload_namespace]
	separator: ;
	regex: (.*)
	target_label: namespace
	replacement: $1
	action: replace
- job_name: istio/istio-policy
  honor_timestamps: true
  scrape_interval: 15s
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - istio-system
  relabel_configs:
  - source_labels: [meta_kubernetes_service_name, meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: istio-policy;http-monitoring
	replacement: $1
	action: keep
- job_name: istio/istio-telemetry
  honor_timestamps: true
  scrape_interval: 15s
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - istio-system
  relabel_configs:
  - source_labels: [meta_kubernetes_service_name, meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: istio-telemetry;http-monitoring
	replacement: $1
	action: keep
- job_name: istio/pilot
  honor_timestamps: true
  scrape_interval: 15s
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - istio-system
  relabel_configs:
  - source_labels: [meta_kubernetes_service_name, meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: istio-pilot;http-monitoring
	replacement: $1
	action: keep
- job_name: istio/galley
  honor_timestamps: true
  scrape_interval: 15s
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - istio-system
  relabel_configs:
  - source_labels: [meta_kubernetes_service_name, meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: istio-galley;http-monitoring
	replacement: $1
	action: keep
- job_name: istio/citadel
  honor_timestamps: true
  scrape_interval: 15s
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
	namespaces:
	  names:
	  - istio-system
  relabel_configs:
  - source_labels: [meta_kubernetes_service_name, meta_kubernetes_endpoint_port_name]
	separator: ;
	regex: istio-citadel;http-monitoring
	replacement: $1
	action: keep
- job_name: prometheus-io-scrape
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: pod
	namespaces:
	  names:
	  - ingress-nginx
	  - ingress-controller
	  - kube-system
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
	separator: ;
	regex: "true"
	replacement: $1
	action: keep
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
	separator: ;
	regex: (https?)
	target_label: scheme
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
	separator: ;
	regex: (.+)
	target_label: metrics_path
	replacement: $1
	action: replace
  - source_labels: [address, __meta_kubernetes_pod_annotation_prometheus_io_port]
	separator: ;
	regex: ([^:]+)(?::\d+)?;(\d+)
	target_label: address
	replacement: $1:$2
	action: replace
  - source_labels: [__meta_kubernetes_pod_node_name]
	separator: ;
	regex: (.+)
	target_label: node
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_namespace]
	separator: ;
	regex: (.+)
	target_label: namespace
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_name]
	separator: ;
	regex: (.+)
	target_label: pod
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_ip]
	separator: ;
	regex: (.+)
	target_label: pod_ip
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_host_ip]
	separator: ;
	regex: (.+)
	target_label: host_ip
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_controller_kind]
	separator: ;
	regex: (.+)
	target_label: created_by_kind
	replacement: $1
	action: replace
  - source_labels: [__meta_kubernetes_pod_controller_name]
	separator: ;
	regex: (.+)
	target_label: created_by_kind
	replacement: $1
	action: replace